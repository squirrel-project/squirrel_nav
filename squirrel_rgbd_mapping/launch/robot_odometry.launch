<!-- This file contains the settings to use odometry messages from a robot.
     To get the cloud, you can subscribe to the online_cloud_out_topic (subsampled
     according to cloud_creation_skip_step or to the original point cloud from the 
     openni driver. 
-->
<launch>
  <!-- Delete the next line, if you start the openni driver separately -->
  <!-- <include file="$(find openni_launch)/launch/openni.launch"/> -->

  <node pkg="squirrel_rgbd_mapping" type="rgbdslam" name="rgbdslam" cwd="node" required="true" output="screen"> 
    <!-- Input data settings-->
    <param name="config/topic_image_mono"              value="/camera/rgb/image_color"/> 
    <param name="config/topic_image_depth"             value="/camera/depth_registered/sw_registered/image_rect_raw"/>

    <param name="config/feature_detector_type"         value="ORB"/><!-- FAST can guarantee a certain range of keypoints using an adjuster-->
    <param name="config/adjuster_max_iterations"       value="10"/><!-- retry this many times if not enough features are detected -->
    <param name="config/detector_grid_resolution"      value="2"/><!-- detect on a 2x2 grid -->
    <param name="config/max_keypoints"                 value="600"/><!-- Extract no more than this many keypoints -->

    <param name="config/feature_extractor_type"        value="ORB"/><!-- ORB are fastest descriptors and require no GPU -->

    <!-- ODOMETRY RELATED -->
    <param name="config/odometry_tpc"                  value="/odom"/><!-- should be of type nav_msgs/Odometry -->
    <param name="config/use_robot_odom"                value="true"/><!-- activate -->
    <param name="config/odom_frame_name"               value="odom"/><!-- the fixed coordinate frame according to odometry -->
    <param name="config/base_frame_name"               value="base_link"/><!-- the robot's position -->
    <param name="config/odometry_information_factor"   value="1"/><!-- weight for the odometry edges in the pose graph -->

    <param name="config/min_sampled_candidates"        value="4"/><!-- Frame-to-frame comparisons to random frames (big loop closures) -->
    <param name="config/predecessor_candidates"        value="4"/><!-- Frame-to-frame comparisons to sequential frames-->
    <param name="config/neighbor_candidates"           value="4"/><!-- Frame-to-frame comparisons to graph neighbor frames-->
    <param name="config/nn_distance_ratio"             value="0.8"/><!-- set empirically -->
    <param name="config/pose_relative_to"              value="largest_loop"/><!-- only optimize part of graph up to the earliest matched frame -->
    <param name="config/keep_all_nodes"                value="true"/><!-- assume zero motion if no motion could be found and continue -->
    <param name="config/fixed_frame_name"              value="/map"/><!-- Output: fixed frame according to rgbdslam (and the incorporated odometry) -->

    <param name="config/backend_solver"                value="pcg"/> <!-- pcg is fast and good for online operation -->
    <param name="config/cloud_creation_skip_step"      value="4"/> <!-- Subsample point cloud during creation -->
  </node>
</launch>
